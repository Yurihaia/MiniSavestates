name: build

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        version: [1.5.78.11833]
        platform: [windows, macos, linux]
        ref: [main]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Binaries
        uses: actions/checkout@v4
        with:
          repository: https://github.com/hk-modding/hk-binary-archives
          ref: ${{ matrix.ref }}
          ssh-key: ${{ secrets.BINARY_ARCHIVE_DEPLOY_KEY }}
          sparse-checkout: |
            ${{ matrix.version }}/managed.${{ matrix.platform }}.tar.gz
          sparse-checkout-cone-mode: false
          
      - name: Unpack Archive
        run: |
          mkdir Managed
          cd Managed
          tar -xzf ../hk-binary-archives/${{ matrix.version }}/managed.${{ matrix.platform }}.tar.gz
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      
      - name: Setup MSBuild
        run: |
          sudo apt-get install -y nuget mono-devel mono-xbuild
      
      - name: Build
        run: |
          dotnet restore
          dotnet build
      
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: build.${{ matrix.version }}.${{ matrix.platform }}
          path: ./out-15/
# name: build

# on: [push, pull_request]

# jobs:
#   build-win:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Setup Vanilla
#       run: |
#         wget https://files.catbox.moe/i4sdl6.zip -O Vanilla.zip
#         unzip Vanilla.zip -d vanilla-15
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#     - name: Setup ms-build
#       run: sudo apt-get install -y nuget mono-devel mono-xbuild
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build MiniSavestates (Windows)
#       run: |
#         dotnet build
#     - name: Upload Windows Binary
#       uses: actions/upload-artifact@v4
#       with:
#         name: MiniSavestatesWin
#         path: ./out-15/

#   build-linux:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Setup Vanilla
#       run: |
#         wget https://files.catbox.moe/j85bvb.zip -O Vanilla.zip
#         unzip Vanilla.zip -d vanilla-15
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#     - name: Setup ms-build
#       run: sudo apt-get install -y nuget mono-devel mono-xbuild
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build MiniSavestates (Linux)
#       run: |
#         dotnet build
#     - name: Upload Linux Binary
#       uses: actions/upload-artifact@v4
#       with:
#         name: MiniSavestatesLinux
#         path: ./out-15/

#   build-mac:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Setup Vanilla
#       run: |
#         wget https://files.catbox.moe/j8fyro.zip -O Vanilla.zip
#         unzip Vanilla.zip -d vanilla-15
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#     - name: Setup ms-build
#       run: sudo apt-get install -y nuget mono-devel mono-xbuild
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build MiniSavestates (Mac)
#       run: |
#         dotnet build
#     - name: Upload Mac Binary
#       uses: actions/upload-artifact@v4
#       with:
#         name: MiniSavestatesMac
#         path: ./out-15/

#   release:
#     needs: [build-win, build-linux, build-mac]
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags')
#     steps:
#       - name: Download artifacts
#         uses: actions/download-artifact@v4
#         with:
#           path: ./artifacts
#       - name: Zip
#         run: |
#             zip -jr MiniSavestatesWin.zip ./artifacts/MiniSavestatesWin/*
#             zip -jr MiniSavestatesLinux.zip ./artifacts/MiniSavestatesLinux/*
#             zip -jr MiniSavestatesMac.zip ./artifacts/MiniSavestatesMac/*
#       - name: Generate release info
#         run: |
#             echo "# Checksums" > ChangeLog.txt ;
#             echo "* Linux:" >> ChangeLog.txt ;
#             echo -n "    * " >> ChangeLog.txt ;
#             sha256sum -b MiniSavestatesLinux.zip | cut -d " " -f 1 >> ChangeLog.txt ;
#             echo "* Mac:" >> ChangeLog.txt ;
#             echo -n "    * " >> ChangeLog.txt ;
#             sha256sum -b MiniSavestatesMac.zip | cut -d " " -f 1 >> ChangeLog.txt ;
#             echo "* Windows:" >> ChangeLog.txt ;
#             echo -n "    * " >> ChangeLog.txt ;
#             sha256sum -b MiniSavestatesWin.zip | cut -d " " -f 1 >> ChangeLog.txt ;
#             echo "# Changelog" >> ChangeLog.txt ;
#             echo "${{ github.event.head_commit.message }}" >> ChangeLog.txt ;
#       - name: Create release if a new tag is pushed
#         uses: softprops/action-gh-release@v2
#         with:
#           body_path: ChangeLog.txt
#           files: |
#             ./MiniSavestatesWin.zip
#             ./MiniSavestatesLinux.zip
#             ./MiniSavestatesMac.zip
