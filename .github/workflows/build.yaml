name: build

on:
  push:
  workflow_dispatch:

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      version-list: ${{ steps.procver.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - name: Process Versions
        id: procver
        uses: actions/github-script@v7
        with:
          script: |
            const script = require("./.github/workflows/create_matrix.js");
            return await script({ context });
  
  build:
    needs: [create-matrix]
    strategy:
      matrix:
        platform: [windows, macos, linux]
        hk: ${{ fromJson(needs.create-matrix.outputs.version-list) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Checkout Binaries
        uses: actions/checkout@v4
        with:
          repository: hk-modding/hk-binary-archives
          ref: main
          ssh-key: ${{ secrets.BINARY_ARCHIVE_DEPLOY_KEY }}
          sparse-checkout: |
            ${{ matrix.hk.version }}/managed.${{ matrix.platform }}.tar.gz
          sparse-checkout-cone-mode: false
          path: ./hk-binary-archives
          
      - name: Unpack Archive
        run: |
          mkdir vanilla-${{ matrix.hk.branch}}
          cd ./vanilla-${{ matrix.hk.branch}}
          tar -xzf ../hk-binary-archives/${{ matrix.hk.version }}/managed.${{ matrix.platform }}.tar.gz
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x
      - name: Setup MSBuild
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nuget mono-devel mono-xbuild
      - name: Build
        run: |
          dotnet restore ${{ matrix.hk.branch}}
          dotnet build ${{ matrix.hk.branch}}
      
      - name: Upload Binary
        if: ( startsWith(github.ref, 'refs/tags') || github.event_name == 'workflow_dispatch' )
        uses: actions/upload-artifact@v4
        with:
          name: build.${{ matrix.hk.version }}.${{ matrix.platform }}
          path: ./out-${{ matrix.hk.branch}}/
  
  release:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Read Versions
        # what the fuck lol
        # parses a tag of the form v<MS VERSION>-hk<HK VERSION>
        run: |
          echo "${{ github.ref_name }}" | sed -E "s/v(.*?)\-hk(.*)/MS_VER=\1\nHK_VER=\2/" >> $GITHUB_ENV
        
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Zip Artifacts
        run: |
            zip -jr minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.windows.zip \
              ./artifacts/build.${{ env.HK_VER }}.windows/*
            
              zip -jr minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.macos.zip \
              ./artifacts/build.${{ env.HK_VER }}.macos/*
            
              zip -jr minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.linux.zip \
              ./artifacts/build.${{ env.HK_VER }}.linux/*
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Node Dependencies
        run: |
          npm install handlebars
      - name: Create Release Notes
        id: create-relnotes
        uses: actions/github-script@v7
        env:
          HK_VERSION: ${{ env.HK_VER }}
          MS_VERSION: ${{ env.MS_VER }}
        with:
          result-encoding: string
          script: |
            const script = require("./.github/workflows/create_relnotes.js");
            return await script();
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.create-relnotes.outputs.result }}
          files: |
            ./minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.windows.zip
            ./minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.macos.zip
            ./minisavestates.v${{ env.MS_VER }}-hk${{ env.HK_VER }}.linux.zip